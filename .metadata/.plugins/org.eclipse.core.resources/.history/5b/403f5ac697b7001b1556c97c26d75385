package com.carrot.beans;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Date;
import javax.naming.NamingException;
import javax.sql.DataSource;
import javax.naming.*;
import com.carrot.beans.test;

import jsp.util.DBConnection;

public class MemberDAO {
	

	private static MemberDAO instance;
	
	
	public static MemberDAO getInstance() {
		if(instance == null) {
			instance = new MemberDAO();
		}
		
		return instance;
	}
	

	
	// String -> DATE로 변경하는 메서
	public Date StringToDate(MemberVO vo) {
		String year = vo.getBirthyy();
		String month = vo.getBirthmm();
		String day = vo.getBirthdd();
		
		Date birthday = Date.valueOf(year+"-"+month+"-"+day);
		return birthday;
	}
	
	//회원 정보 저장 메서드
	public void insertMember(MemberVO vo) throws SQLException, NamingException, ClassNotFoundException  {
		
		StringBuffer sql = new StringBuffer();
		sql.append("insert into Member values(?,?,?,?,?");
		Connection conn = null;
		PreparedStatement pstmt = null;
		
		try {
		
			conn.DBConnection.getConnection();
			
		
		pstmt = (PreparedStatement) conn.prepareStatement(sql.toString());
		pstmt.setString(1,vo.getId());
		pstmt.setString(2,vo.getPwd());
		pstmt.setString(3,vo.getPhone_num());
		pstmt.setString(4,vo.getName());
		pstmt.setDate(5,StringToDate(vo));
		
		pstmt.executeUpdate(); 
		conn.commit();
		}catch(NamingException | SQLException sqle) {
			System.out.println("오류");
			conn.rollback();
			throw new RuntimeException(sqle.getMessage());
		}finally {
			try {
				if(pstmt!= null) {pstmt.close(); pstmt = null;}
				if(conn!=null) {conn.close(); conn = null;}
			}catch(Exception e) {
				throw new RuntimeException(e.getMessage());
			}
		}
		
		
		
	}
	
}

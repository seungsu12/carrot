/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.66
 * Generated at: 2021-10-03 06:18:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class order_005fform_005fsecond_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<style>\n");
      out.write("	\n");
      out.write("	.deliver_title{\n");
      out.write("		margin: 1rem 0 1rem 0;\n");
      out.write("    	font-size: 1.5rem;\n");
      out.write("	}\n");
      out.write("	.deliver_content_first{\n");
      out.write("		display :flex;\n");
      out.write("		justify-content : space-between;\n");
      out.write("		margin-bottom :1rem;\n");
      out.write("	}\n");
      out.write("	.deliver_content_first input{\n");
      out.write("		width: 100%;\n");
      out.write("		height: 3rem;\n");
      out.write("		font-size : 1rem;\n");
      out.write("		padding : 1rem;\n");
      out.write("		margin-top :1rem;\n");
      out.write("		margin-bottom : 1rem;\n");
      out.write("	}\n");
      out.write("	.deliver_content_addr{\n");
      out.write("		display:flex;\n");
      out.write("		margin-top : 1rem;\n");
      out.write("		margin-bottom :1rem;\n");
      out.write("	}\n");
      out.write("	.deliver_content_addr input{\n");
      out.write("		height: 2.5rem;\n");
      out.write("    	width: 90%;\n");
      out.write("	}\n");
      out.write("	.deliver_content_addr button{\n");
      out.write("		height: 2.5rem;\n");
      out.write("		width : 10%;\n");
      out.write("	}\n");
      out.write("	.deliver_content_firstblock{\n");
      out.write("		width :45%;\n");
      out.write("	}\n");
      out.write("	.deliver_content_firstblock div{\n");
      out.write("		width :100%;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.deliver_extra_addr_wrapper{\n");
      out.write("		width :100%;\n");
      out.write("	}\n");
      out.write("	.deliver_extra_addr_wrapper input{\n");
      out.write("		width: 100%;\n");
      out.write("		height: 2.5rem;\n");
      out.write("    	font-size: 1rem;\n");
      out.write("    	padding: 1rem;\n");
      out.write("	}\n");
      out.write("	.addr_option_wrapper{\n");
      out.write("		padding-top :2rem;\n");
      out.write("		width:100%;\n");
      out.write("		margin : 1rem 0 1rem 0;\n");
      out.write("	}\n");
      out.write("	.addr_option_wrapper select{\n");
      out.write("		width: 100%;\n");
      out.write("		height: 2.5rem;\n");
      out.write("    	font-size: 1rem;\n");
      out.write("    	margin-bottom :1rem;\n");
      out.write("    	\n");
      out.write("	}\n");
      out.write("	#hide_input{\n");
      out.write("		display : none;\n");
      out.write("		margin-top : 1rem;\n");
      out.write("		width: 100%;\n");
      out.write("		height: 2.5rem;\n");
      out.write("    	font-size: 1rem;\n");
      out.write("    	padding: 1rem;\n");
      out.write("	}\n");
      out.write("	.order_form_second_button{\n");
      out.write("		font-size : 1.1rem;\n");
      out.write("		position : relative;\n");
      out.write("		top : 5.6rem;\n");
      out.write("		width : 100%;\n");
      out.write("		height : 3.2rem;\n");
      out.write("		background : black;\n");
      out.write("		color : white;\n");
      out.write("		text-align : center;\n");
      out.write("		\n");
      out.write("	}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("	<div class=\"order_form_second_wrapper\">\n");
      out.write("		<div class=\"deliver_title\">\n");
      out.write("			배송지 정보\n");
      out.write("		</div>\n");
      out.write("		<div class=\"deliver_content_first\">\n");
      out.write("			<div class=\"deliver_content_firstblock\">\n");
      out.write("				<span>받으시는 분</span>\n");
      out.write("				<div >\n");
      out.write("					<input type=\"text\" placeholder=\"이름\">\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"deliver_content_firstblock\">\n");
      out.write("				<span>연락처</span>\n");
      out.write("				<div>\n");
      out.write("					<input type=\"text\" placeholder=\"-없이 입력\">\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			\n");
      out.write("		</div>\n");
      out.write("		<div class=\"deliver_content_second\">\n");
      out.write("			<span>배송주소</span>\n");
      out.write("			<div class=\"deliver_content_addr\">\n");
      out.write("				<input type=\"text\" id=\"order_address\">\n");
      out.write("				<button onclick=\"sample4_execDaumPostcode()\">검색</button>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("		<div class=\"deliver_extra_addr_wrapper\">\n");
      out.write("			<input type=\"text\" id=\"detail_delivery\" placeholder=\"나머지 주소 입력\">\n");
      out.write("		</div>\n");
      out.write("		\n");
      out.write("		<div class=\"addr_option_wrapper\">\n");
      out.write("			<select name=\"\" id=\"direct_input_button\" onchange='direct_input_event(this.value)'>\n");
      out.write("				<option value=\"\" selected disabled>배송메모를 선택하세요</option>\n");
      out.write("				<option value=\"contact\">배송시 연락 부탁드립니다.</option>\n");
      out.write("				<option value=\"door\">문 앞에두어주세요</option>\n");
      out.write("				<option  id=\"\" value=\"direct\">직접입력</option>\n");
      out.write("				\n");
      out.write("			</select>\n");
      out.write("			<input type=\"text\" id=\"hide_input\" placeholder=\"배송메모를 입력하여 주세요.\">\n");
      out.write("		</div>\n");
      out.write("		<div class=\"long\">\n");
      out.write("			<button class=\"order_form_second_button\">다음 단계 진행</button>\n");
      out.write("		</div>\n");
      out.write("\n");
      out.write("	</div>\n");
      out.write("	<script>\n");
      out.write("	const direct_input_button = document.getElementById('direct_input_button');\n");
      out.write("	const hide_input = document.getElementById('hide_input');\n");
      out.write("\n");
      out.write("	function direct_input_event(value){	\n");
      out.write("		if(value == 'direct'){\n");
      out.write("		\n");
      out.write("			hide_input.style.display = 'block';\n");
      out.write("		}\n");
      out.write("		else{\n");
      out.write("			hide_input.style.display = 'none';\n");
      out.write("			hide_input.innerHTML ='';\n");
      out.write("		} \n");
      out.write("	}\n");
      out.write("	function sample4_execDaumPostcode() {\n");
      out.write("        new daum.Postcode({\n");
      out.write("            oncomplete: function(data) {\n");
      out.write("                \n");
      out.write("                var roadAddr = data.roadAddress; // 도로명 주소 변수\n");
      out.write("                document.getElementById(\"order_address\").value = roadAddr;\n");
      out.write("\n");
      out.write("            } \n");
      out.write("        }).open();\n");
      out.write("    }\n");
      out.write("	</script>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
